<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	
    <bean id="webServiceImportFr" class="com.slxt.rs.util.WebServiceImportFr">
		<property name="wfs"  ref="wfsService"></property>
	</bean><!-- 
	 <bean id="timeBakFiletask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
            <property name="targetObject">
                <ref bean="webServiceImportFr"/>
            </property>
            <property name="targetMethod">
                <value>work</value>
            </property>
         
    </bean>

     <bean id="doTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
            <property name="jobDetail">
                <ref bean="timeBakFiletask"/>
            </property>
            <property name="cronExpression">
                <value>0 0 1 * * ?</value>
            </property>
    </bean>
 
   	<bean id="startQuertz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"> 
            <property name="triggers"> 
                <list> 
                    <ref bean="doTime"/>
                </list> 
            </property> 
    </bean>  -->
     
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="configLocation"
			value="classpath:hibernate.cfg.xml">
		</property>
	</bean>
	
	<!-- 配置事务管理器 -->
     <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
         <property name="sessionFactory">
            <ref bean="sessionFactory"/>
         </property>
     </bean>
     
     <!-- 事务的传播特性 -->
      <tx:advice id="txAdvice" transaction-manager="transactionManager">
       <tx:attributes>
           <tx:method name="add*" propagation="REQUIRED"/>
           <tx:method name="del*" propagation="REQUIRED"/>
           <tx:method name="update*" propagation="REQUIRED"/>
           <tx:method name="login*" propagation="REQUIRED"/>
           <tx:method name="*" read-only="true"/>
       </tx:attributes>
     </tx:advice>
     
     
     <!-- 那些类那些方法使用事务 -->
    <aop:config>
       <aop:pointcut id="allManagerMethod" expression="execution(* com.slxt.rs.*dao.*(..))"/>
       <!-- 相当于切面 -->
       <aop:advisor advice-ref="txAdvice" pointcut-ref="allManagerMethod"/>
    </aop:config>
 
	
	
	
</beans>