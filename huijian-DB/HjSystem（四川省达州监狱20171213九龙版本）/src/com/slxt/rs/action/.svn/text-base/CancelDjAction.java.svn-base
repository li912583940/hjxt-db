package com.slxt.rs.action;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;


import com.slxt.rs.form.CancelDjForm;
import com.slxt.rs.model.SysUser;
import com.slxt.rs.svc.CancelDjService;
import com.slxt.rs.util.Constant;
import com.slxt.rs.vo.HjDjVO;
import com.slxt.rs.vo.Page;

public class CancelDjAction extends DispatchAction{
	private CancelDjService cds;

	public void setCds(CancelDjService cds) {
		this.cds = cds;
	}
	public ActionForward search(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
			SysUser user = (SysUser) request.getSession().getAttribute("users");
			if (user == null) {
				return mapping.findForward("sessionFailure");
			}
			CancelDjForm cdf = (CancelDjForm) form;
			Page page = new Page();
			page.setPageNo(1);
			Date date = new Date(System.currentTimeMillis());
			SimpleDateFormat df1 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			String now = df1.format(date);
			String todayBegin = "";
			String todayEnd = "";
			if(cdf.getBeginTime()!=null || cdf.getEndTime()!=null || cdf.getState()!=null || cdf.getHjType()!=null){
				StringBuffer str=null;
				if(user.getIsSuper()==1){
					str=new StringBuffer("select dj.HJID,dj.JY,dj.JQ_Name,dj.FR_No,dj.FR_Name,dj.QS_Info1,dj.QS_Info2,dj.QS_Info3,dj.QS_Info4,dj.QS_Info5,dj.QS_Info6,dj.QS_Info7,dj.QS_Info8,dj.QS_Info9,dj.HJ_Time,dj.HJ_Info,dj.HJ_Type,dj.Monitor_Flag,dj.FP_Flag,dbo.get_ck(dj.FP_Line_No,dj.JY) as zw,dj.DJ_User,dj.DJ_Time,dj.Cancel_Info,dj.HJ_Index from JL_HJ_DJ dj where 1=1");
				}else if(user.getIsSuper()==0 && user.getGroupNo().equals("Admin")){
					str=new StringBuffer("select dj.HJID,dj.JY,dj.JQ_Name,dj.FR_No,dj.FR_Name,dj.QS_Info1,dj.QS_Info2,dj.QS_Info3,dj.QS_Info4,dj.QS_Info5,dj.QS_Info6,dj.QS_Info7,dj.QS_Info8,dj.QS_Info9,dj.HJ_Time,dj.HJ_Info,dj.HJ_Type,dj.Monitor_Flag,dj.FP_Flag,dbo.get_ck(dj.FP_Line_No,dj.JY) as zw,dj.DJ_User,dj.DJ_Time,dj.Cancel_Info,dj.HJ_Index from JL_HJ_DJ dj,JL_JQ jq where dj.JQ_Name=jq.JQ_Name and jq.Is_Ts=0");
				}else{
					str=new StringBuffer("select dj.HJID,dj.JY,dj.JQ_Name,dj.FR_No,dj.FR_Name,dj.QS_Info1,dj.QS_Info2,dj.QS_Info3,dj.QS_Info4,dj.QS_Info5,dj.QS_Info6,dj.QS_Info7,dj.QS_Info8,dj.QS_Info9,dj.HJ_Time,dj.HJ_Info,dj.HJ_Type,dj.Monitor_Flag,dj.FP_Flag,dbo.get_ck(dj.FP_Line_No,dj.JY) as zw,dj.DJ_User,dj.DJ_Time,dj.Cancel_Info,dj.HJ_Index from JL_HJ_DJ dj,JL_JQ jq,SYS_USER_JQ suj where dj.JQ_Name=jq.JQ_Name and jq.JQ_No=suj.JQ_No and suj.Group_No='"+user.getGroupNo()+"'");
				}
				if(cdf.getBeginTime()!=null){
					str.append(" and dj.DJ_Time >='"+cdf.getBeginTime()+"'");
					todayBegin=cdf.getBeginTime();
				}
				if(cdf.getEndTime()!=null){
					str.append(" and dj.DJ_Time <='"+cdf.getEndTime()+"'");
					todayEnd=cdf.getEndTime();
				}
				if(cdf.getState()!=null && !cdf.getState().equals("null")){
					str.append(" and dj.State ="+cdf.getState());
				}
				if(cdf.getHjType()!=null && !cdf.getHjType().equals("null")){
					str.append(" and dj.HJ_Type ="+cdf.getHjType());
				}
				str.append(" order by dj.JY,dj.JQ_Name,dj.FP_Flag,dj.HJID desc");
				Object[] obj={};
				Map map=cds.searchToPageBySql(str.toString(),page.getPageNo(),20,obj);
				page.setPageSize(20);
				page.setRecordCount((Integer)map.get(Constant.ALLFILEDCOUNT));
				List list=(List)map.get(Constant.RESULTLIST);
				for(int i=0;i<list.size();i++){
					Object[] obj1=(Object[])list.get(i);
			    	HjDjVO hjDjVO=new HjDjVO();
			    	hjDjVO.setHjid(obj1[0].toString());
			    	hjDjVO.setJy(obj1[1].toString());
			    	if(obj1[2]!=null && !obj1[2].toString().equals("")){
			    		hjDjVO.setJqName(obj1[2].toString());
			    	}
			    	hjDjVO.setFrNo(obj1[3].toString());
			    	if(obj1[4]!=null && !obj1[4].toString().equals("")){
			    		hjDjVO.setFrName(obj1[4].toString());
			    	}
			    	String qsName="";
			    	if(obj1[5]!=null && !obj1[5].toString().equals("")){
			    		qsName+=obj1[5].toString();
			    	}
			    	if(obj1[6]!=null && !obj1[6].toString().equals("")){
			    		qsName+=obj1[6].toString();
			    	}
			    	if(obj1[7]!=null && !obj1[7].toString().equals("")){
			    		qsName+=obj1[7].toString();
			    	}
			    	if(obj1[8]!=null && !obj1[8].toString().equals("")){
			    		qsName+=obj1[8].toString();
			    	}
			    	if(obj1[9]!=null && !obj1[9].toString().equals("")){
			    		qsName+=obj1[9].toString();
			    	}
			    	if(obj1[10]!=null && !obj1[10].toString().equals("")){
			    		qsName+=obj1[10].toString();
			    	}
			    	if(obj1[11]!=null && !obj1[11].toString().equals("")){
			    		qsName+=obj1[11].toString();
			    	}
			    	if(obj1[12]!=null && !obj1[12].toString().equals("")){
			    		qsName+=obj1[12].toString();
			    	}
			    	if(obj1[13]!=null && !obj1[13].toString().equals("")){
			    		qsName+=obj1[13].toString();
			    	}
			    	hjDjVO.setQsInfo1(qsName);
			    	hjDjVO.setHjTime(Integer.parseInt(obj1[14].toString())/60+"");
			    	if(obj1[15]!=null && !obj1[15].toString().equals("")){
			    		hjDjVO.setHjInfo(obj1[15].toString());	
			    	}
			    	hjDjVO.setHjType(obj1[16].toString());
			    	if(obj1[17]!=null && !obj1[17].toString().equals("")){
			    		hjDjVO.setMonitorFlag(obj1[17].toString());
			    	}
			    	hjDjVO.setFpFlag(obj1[18].toString());
			    	if(obj1[19]!=null && !obj1[19].toString().equals("")){
			    		hjDjVO.setZw(obj1[19].toString());
			    	}
			    	if(obj1[20]!=null && !obj1[20].toString().equals("")){
			    		hjDjVO.setDjUser(obj1[20].toString());
			    	}
			    	if(obj1[21]!=null && !obj1[21].toString().equals("")){
			    		hjDjVO.setDjTime(obj1[21].toString().substring(0, 19));
			    	}
			    	if(obj1[22]!=null){
			    		hjDjVO.setCancelInfo(obj1[22].toString());
			    	}else{
			    		hjDjVO.setCancelInfo("未取消");
			    	}
			    	if(obj1[23]!=null && !obj1[23].toString().equals("")){
			    		hjDjVO.setHjIndex(obj1[23].toString());
			    	}
			    	page.getList().add(hjDjVO);
			    }
			}else{
				StringBuffer str = new StringBuffer(now.substring(0, 10));
				str.append(" 00:00:00");
				todayBegin = str.toString();
				StringBuffer str1 = new StringBuffer(now.substring(0, 10));
				str1.append(" 23:59:59");
				todayEnd = str1.toString();
			}
			request.setAttribute("todayBegin", todayBegin);
			request.setAttribute("todayEnd", todayEnd);
			request.setAttribute("page", page);
			return mapping.findForward("cancelDjMain");
	}
	public ActionForward search1(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
			SysUser user = (SysUser) request.getSession().getAttribute("users");
			if (user == null) {
				return mapping.findForward("sessionFailure");
			}
			CancelDjForm cdf = (CancelDjForm) form;
			Page page = new Page();
			page.setPageNo(Integer.parseInt(request.getParameter("pageNo")));
			Date date = new Date(System.currentTimeMillis());
			SimpleDateFormat df1 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			String now = df1.format(date);
			String todayBegin = "";
			String todayEnd = "";
			if(cdf.getBeginTime()!=null || cdf.getEndTime()!=null || cdf.getState()!=null || cdf.getHjType()!=null){
				StringBuffer str=null;
				if(user.getIsSuper()==1){
					str=new StringBuffer("select dj.HJID,dj.JY,dj.JQ_Name,dj.FR_No,dj.FR_Name,dj.QS_Info1,dj.QS_Info2,dj.QS_Info3,dj.QS_Info4,dj.QS_Info5,dj.QS_Info6,dj.QS_Info7,dj.QS_Info8,dj.QS_Info9,dj.HJ_Time,dj.HJ_Info,dj.HJ_Type,dj.Monitor_Flag,dj.FP_Flag,dbo.get_ck(dj.FP_Line_No,dj.JY) as zw,dj.DJ_User,dj.DJ_Time,dj.Cancel_Info,dj.HJ_Index from JL_HJ_DJ dj where 1=1");
				}else if(user.getIsSuper()==0 && user.getGroupNo().equals("Admin")){
					str=new StringBuffer("select dj.HJID,dj.JY,dj.JQ_Name,dj.FR_No,dj.FR_Name,dj.QS_Info1,dj.QS_Info2,dj.QS_Info3,dj.QS_Info4,dj.QS_Info5,dj.QS_Info6,dj.QS_Info7,dj.QS_Info8,dj.QS_Info9,dj.HJ_Time,dj.HJ_Info,dj.HJ_Type,dj.Monitor_Flag,dj.FP_Flag,dbo.get_ck(dj.FP_Line_No,dj.JY) as zw,dj.DJ_User,dj.DJ_Time,dj.Cancel_Info,dj.HJ_Index from JL_HJ_DJ dj,JL_JQ jq where dj.JQ_Name=jq.JQ_Name and jq.Is_Ts=0");
				}else{
					str=new StringBuffer("select dj.HJID,dj.JY,dj.JQ_Name,dj.FR_No,dj.FR_Name,dj.QS_Info1,dj.QS_Info2,dj.QS_Info3,dj.QS_Info4,dj.QS_Info5,dj.QS_Info6,dj.QS_Info7,dj.QS_Info8,dj.QS_Info9,dj.HJ_Time,dj.HJ_Info,dj.HJ_Type,dj.Monitor_Flag,dj.FP_Flag,dbo.get_ck(dj.FP_Line_No,dj.JY) as zw,dj.DJ_User,dj.DJ_Time,dj.Cancel_Info,dj.HJ_Index from JL_HJ_DJ dj,JL_JQ jq,SYS_USER_JQ suj where dj.JQ_Name=jq.JQ_Name and jq.JQ_No=suj.JQ_No and suj.Group_No='"+user.getGroupNo()+"'");
				}
				if(cdf.getBeginTime()!=null){
					str.append(" and dj.DJ_Time >='"+cdf.getBeginTime()+"'");
					todayBegin=cdf.getBeginTime();
				}
				if(cdf.getEndTime()!=null){
					str.append(" and dj.DJ_Time <='"+cdf.getEndTime()+"'");
					todayEnd=cdf.getEndTime();
				}
				if(cdf.getState()!=null && !cdf.getState().equals("null")){
					str.append(" and dj.State ="+cdf.getState());
				}
				if(cdf.getHjType()!=null && !cdf.getHjType().equals("null")){
					str.append(" and dj.HJ_Type ="+cdf.getHjType());
				}
				str.append(" order by dj.JY,dj.JQ_Name,dj.FP_Flag,dj.HJID desc");
				Object[] obj={};
				Map map=cds.searchToPageBySql(str.toString(),page.getPageNo(),20,obj);
				page.setPageSize(20);
				page.setRecordCount((Integer)map.get(Constant.ALLFILEDCOUNT));
				List list=(List)map.get(Constant.RESULTLIST);
				for(int i=0;i<list.size();i++){
					Object[] obj1=(Object[])list.get(i);
			    	HjDjVO hjDjVO=new HjDjVO();
			    	hjDjVO.setHjid(obj1[0].toString());
			    	hjDjVO.setJy(obj1[1].toString());
			    	if(obj1[2]!=null && !obj1[2].toString().equals("")){
			    		hjDjVO.setJqName(obj1[2].toString());
			    	}
			    	hjDjVO.setFrNo(obj1[3].toString());
			    	if(obj1[4]!=null && !obj1[4].toString().equals("")){
			    		hjDjVO.setFrName(obj1[4].toString());
			    	}
			    	String qsName="";
			    	if(obj1[5]!=null && !obj1[5].toString().equals("")){
			    		qsName+=obj1[5].toString();
			    	}
			    	if(obj1[6]!=null && !obj1[6].toString().equals("")){
			    		qsName+=obj1[6].toString();
			    	}
			    	if(obj1[7]!=null && !obj1[7].toString().equals("")){
			    		qsName+=obj1[7].toString();
			    	}
			    	if(obj1[8]!=null && !obj1[8].toString().equals("")){
			    		qsName+=obj1[8].toString();
			    	}
			    	if(obj1[9]!=null && !obj1[9].toString().equals("")){
			    		qsName+=obj1[9].toString();
			    	}
			    	if(obj1[10]!=null && !obj1[10].toString().equals("")){
			    		qsName+=obj1[10].toString();
			    	}
			    	if(obj1[11]!=null && !obj1[11].toString().equals("")){
			    		qsName+=obj1[11].toString();
			    	}
			    	if(obj1[12]!=null && !obj1[12].toString().equals("")){
			    		qsName+=obj1[12].toString();
			    	}
			    	if(obj1[13]!=null && !obj1[13].toString().equals("")){
			    		qsName+=obj1[13].toString();
			    	}
			    	hjDjVO.setQsInfo1(qsName);
			    	hjDjVO.setHjTime(Integer.parseInt(obj1[14].toString())/60+"");
			    	if(obj1[15]!=null && !obj1[15].toString().equals("")){
			    		hjDjVO.setHjInfo(obj1[15].toString());	
			    	}
			    	hjDjVO.setHjType(obj1[16].toString());
			    	if(obj1[17]!=null && !obj1[17].toString().equals("")){
			    		hjDjVO.setMonitorFlag(obj1[17].toString());
			    	}
			    	hjDjVO.setFpFlag(obj1[18].toString());
			    	if(obj1[19]!=null && !obj1[19].toString().equals("")){
			    		hjDjVO.setZw(obj1[19].toString());
			    	}
			    	if(obj1[20]!=null && !obj1[20].toString().equals("")){
			    		hjDjVO.setDjUser(obj1[20].toString());
			    	}
			    	if(obj1[21]!=null && !obj1[21].toString().equals("")){
			    		hjDjVO.setDjTime(obj1[21].toString().substring(0, 19));
			    	}
			    	if(obj1[22]!=null){
			    		hjDjVO.setCancelInfo(obj1[22].toString());
			    	}else{
			    		hjDjVO.setCancelInfo("未取消");
			    	}
			    	if(obj1[23]!=null && !obj1[23].toString().equals("")){
			    		hjDjVO.setHjIndex(obj1[23].toString());
			    	}
			    	page.getList().add(hjDjVO);
			    }
			}else{
				StringBuffer str = new StringBuffer(now.substring(0, 10));
				str.append(" 00:00:00");
				todayBegin = str.toString();
				StringBuffer str1 = new StringBuffer(now.substring(0, 10));
				str1.append(" 23:59:59");
				todayEnd = str1.toString();
			}
			request.setAttribute("todayBegin", todayBegin);
			request.setAttribute("todayEnd", todayEnd);
			request.setAttribute("page", page);
			return mapping.findForward("cancelDjMain");
	}
}
